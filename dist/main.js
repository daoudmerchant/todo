/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/domtools.js":
/*!*************************!*\
  !*** ./src/domtools.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// yes I'm very aware that the below is just a quick fix\n// before the React module\n\nconst DOMtools = (function() {\n\n    function returnElement(obj) {\n\n        // parameter object can contain maximum:\n        //     type: ...\n        //     class_es: ...\n        //     text: ...\n        //     attribute: [\n        //         [type, ...],\n        //         [placeholder, ...],\n        //         [name, ...],\n        //         [value, ...],\n        //         [color, ...],\n        //         [data-projIndex, ...],\n        //         [data-todoIndex, ...]\n        //     ]\n\n        const newElement = document.createElement(obj.type);\n        if (obj.hasOwnProperty(\"class\")) {\n            newElement.className = obj.class;\n        }\n        if (obj.hasOwnProperty(\"text\")) {\n            newElement.innerHTML = obj.text;\n        }\n        if (obj.hasOwnProperty(\"attribute\")) {\n            const entries = Object.entries(obj.attribute);\n            for (const [attr, value] of entries) {\n                newElement.setAttribute(attr, value);\n            };\n        }\n        return newElement;\n    }\n\n    function setAttributes(element, attributes) {\n        const entries = Object.entries(attributes);\n        for (const [attr, value] of entries) {\n            element.setAttribute(attr, value);\n        }\n    }\n\n    function appendChildren(parent, ...children) {\n        children.forEach(child => parent.appendChild(child));\n    }\n\n    function addEventListeners(fn, ...elements) {\n        elements.forEach(element => element.addEventListener(fn));\n    }\n\n    function clearAndRender(panel, callback, ...args) {\n        panel.innerHTML = \"\";\n        callback(panel, ...args);\n    }\n\n    return {\n        returnElement,\n        setAttributes,\n        appendChildren,\n        addEventListeners,\n        clearAndRender\n    }\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DOMtools);\n\n//# sourceURL=webpack://todo/./src/domtools.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _todo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./todo.js */ \"./src/todo.js\");\n/* harmony import */ var _domtools_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domtools.js */ \"./src/domtools.js\");\n\n\n\n\n// RENDER MODULE\n\n// - Defines view renders\n// - Attaches them to existing DOM elements\n// Requires both submit function AND todo module\n\n\nconst render = (function() {\n\n    // panel element queries\n\n    const projectPanel = document.querySelector(\"#projectbar\");\n    const todoPanel = document.querySelector(\"#todoview\");\n\n    // permanent button element queries\n\n    const defaultView = document.querySelector(\"#default\");\n    const importantView = document.querySelector(\"#important\");\n    const overdueView = document.querySelector(\"#overdue\");\n    const thisWeekView = document.querySelector(\"#duethisweek\");\n    const allTodosView = document.querySelector(\"#viewall\");\n\n    function _attachRenderEvent(...elements) {\n        elements.forEach(element => element.addEventListener(\"click\", _renderView));\n    }\n\n    _attachRenderEvent(\n        defaultView,\n        importantView,\n        overdueView,\n        thisWeekView,\n        allTodosView\n    );\n\n    // aggregate render functions\n    \n    function _renderAllLists(panel, array, attr) {\n        array.forEach((project, i) => {\n            renderList(panel, project[attr], project.color, i);\n        });\n    }\n    \n    function _renderView() {\n        _viewProjectList(); // always redraw project bar\n        if (this.hasAttribute(\"id\")) { // not a project\n            switch (this.id) {\n                case \"default\" :\n                    _viewDefault();\n                    break;\n                case \"important\" :\n                    _viewImportant();\n                    break;\n                case \"overdue\" :\n                    _viewOverdue();\n                    break;\n                case \"duethisweek\" :\n                    _viewDueThisWeek();\n                    break;\n                case \"viewall\" :\n                    _viewAllTodos();\n                    break;\n            }\n        } else { // is project\n            _viewProject(Number(this.dataset.projectindex) + 1);\n        }\n    }\n    \n    // Render currently rendered todos\n    \n    let _viewCurrent = _viewDefault;\n    \n    function renderCurrent() {\n        _viewProjectList();\n        _viewCurrent()\n    }\n\n    function setCurrent(i = null) {\n        if (i !== null) {\n            _viewCurrent = () => _viewProject(i);\n        } else {\n            _viewCurrent = _viewDefault;\n        }\n    }\n\n    // Render other specific views:\n\n    // - project bar\n\n    function _viewProjectList() {\n        const userProjects = _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.returnAll().slice(1);\n        _renderPanel(projectPanel, renderList, userProjects);\n    }\n\n    // - todo views\n\n    function _viewDefault() {\n        _renderPanel(todoPanel, _renderAllLists, _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.returnAll(), \"outstanding\");\n        _viewCurrent = _viewDefault;\n    }\n\n    function _viewImportant() {\n        _renderPanel(todoPanel, _renderAllLists, _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.returnAll(), \"important\");\n        _viewCurrent = _viewImportant;\n    }\n\n    function _viewOverdue() {\n        _renderPanel(todoPanel, _renderAllLists, _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.returnAll(), \"overdue\");\n        _viewCurrent = _viewOverdue;\n    }\n\n    function _viewDueThisWeek() {\n        _renderPanel(todoPanel, _renderAllLists, _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.returnAll(), \"dueThisWeek\")\n        _viewCurrent = _viewDueThisWeek;\n    }\n\n    function _viewAllTodos() {\n        _renderPanel(todoPanel, _renderAllLists, _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.returnAll(), \"todos\");\n        _viewCurrent = _viewAllTodos;\n    }\n\n    function _viewProject(i) {\n        function _selectProject(index) {\n            const projects = document.querySelectorAll(\".project\");\n            const thisProjBar = projects.item(index - 1);\n            console.log(thisProjBar);\n            thisProjBar.classList.add(\"selected\")\n        }\n            // Yes, I know ideally the class should be added at time of render, but\n            // I have to account for readability when renderList() already has many\n            // optional functions. This is an optional effect and can be easily\n            // removed here\n        \n        const thisProj = _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.returnItem(i);\n        _renderPanel(todoPanel, renderList, thisProj.todos, thisProj.color, i)\n        _selectProject(i);\n        _viewCurrent = () => _viewProject(i);\n    }\n\n\n    // SUBMIT AND RERENDER\n\n    // - Sends element information to submit function\n    // - rerenders page\n    // - required both when rendering a list AND when adding a new button\n     \n    function submitAndRerender() {\n        if (this.value === \"\") { return };\n        submit(this)\n        renderCurrent();\n    }\n\n        \n    // page rendering functions\n\n    function _renderPanel(panel, callback, ...args) { // runs function and adds new box\n        \n        function _addNewButton(panel, index = null) {\n            const container = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"div\",\n                class: \"box container new\",\n                attribute: {\n                    \"data-projectindex\": index\n                }\n            });\n            const newNameInput = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"input\",\n                class: \"text textinput\",\n                attribute: {\n                    type: \"text\",\n                    placeholder: \"+ add new\",\n                    spellcheck: \"false\",\n                }\n            });\n            container.appendChild(newNameInput);\n            newNameInput.addEventListener(\"focusout\", submitAndRerender);\n            panel.appendChild(container);\n        }\n\n        _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.clearAndRender(panel, callback, ...args);\n        const lastArg = args[args.length - 1];\n        if ((lastArg === \"outstanding\") || (lastArg === \"todos\")) { // view outstanding or all\n            _addNewButton(panel, 0)\n        } else if (typeof(lastArg) === \"number\") { // view a project\n            _addNewButton(panel, lastArg);\n        } else if (typeof(lastArg) === \"object\") { // project bar\n            _addNewButton(panel);\n        }\n    }\n\n    \n    // Render List:\n\n    // - Receives panel to be filled, array to be rendered and optional extra information for styling\n    // - Requires submit AND submitAndRerender\n\n\n    function renderList(panel, array, color = null, projIndex = null) { // last two parameters optional\n\n        // element creation functions\n        \n        function createContainer(i) {\n            const container = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"div\",\n                class: \"container\",\n                attribute: {\n                    \"data-projectindex\": (projIndex !== null) ? projIndex : i,\n                    \"data-todoindex\": (projIndex !== null) ? i : \"null\"\n                }\n            });\n            // container.addEventListener(\"click\", _renderView); // if click event better \n            return container;\n        }\n        \n        function createColorPicker(color) { // send obj.color\n            const colorPicker = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"input\",\n                attribute: {\n                    type: \"color\",\n                    value: color\n                }\n            });\n            colorPicker.addEventListener(\"change\", submitAndRerender)\n            return colorPicker;\n        }\n        \n        function createCheckbox(complete) { // requires id and name for accessibility?\n            const checkbox = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"input\",\n                attribute: {\n                    type: \"checkbox\"\n                }\n            });\n            if (complete) {\n                checkbox.checked = \"true\"\n            }\n            checkbox.addEventListener(\"change\", submitAndRerender);\n            return checkbox;\n        }\n        \n        function createName(obj) {\n            const nameText = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"p\",\n                class: \"text name\",\n                text: obj.name,\n            })\n            if (obj.complete) {\n                nameText.classList.add(\"complete\")\n            } else {\n                nameText.setAttribute(\n                    \"style\",\n                    (color) ? `color:${color}` : `color:${obj.color}`\n                    )\n                }\n                let timer = 0;\n                let prevent = false;\n                nameText.addEventListener(\"click\", e => {\n                    timer = setTimeout(function() {\n                        if (!prevent) {\n                            if (projIndex === null) { // project view\n                                _renderView.call(e.target.parentElement);\n                            } else {\n                                _toggleNotesAndSubmit(e.target);\n                        }\n                    }\n                }, 200);\n            });\n            nameText.addEventListener(\"dblclick\", e => {\n                clearTimeout(timer);\n                prevent = true;\n                _toggleInput(e.target);\n            });\n            return nameText;\n        }\n        \n        function createNameInput(name) { // send obj.name\n            const nameInput = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"input\",\n                class: \"text textinput hidden\",\n                attribute: {\n                    type: \"text\",\n                    spellcheck: \"false\",\n                    value: name\n                }\n            });\n            nameInput.addEventListener(\"focusout\", submitAndRerender);\n            return nameInput;\n        }\n        \n        function createSelectBox() {\n            const selectContainer = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"select\",\n                class: \"text select\"\n            });\n            _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.returnProjNames().forEach((project, i) => {\n                const option = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                    type: \"option\",\n                    text: project,\n                    attribute: {\n                        value: i\n                    }\n                })\n                if (i == projIndex) {\n                    option.selected = \"selected\";\n                }\n                selectContainer.appendChild(option);\n            })\n            selectContainer.addEventListener(\"change\", submitAndRerender);\n            return selectContainer;\n        }\n        \n        function createImportantIcon(importance) { // send obj.important\n            const importantIcon = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"p\",\n                class: (importance) ? \"importance urgent\" : \"importance\",\n                text: \"!\",\n                \n            });\n            if (importance) {\n                importantIcon.setAttribute(\"data-importance\", \"true\");\n            }\n            importantIcon.addEventListener(\"click\", submitAndRerender);\n            return importantIcon;\n        }\n        \n        function createDateInput(date) {\n            function make2Decimals(num) {\n                return num.toString().padStart(2, \"0\");\n            };\n            const dateInput = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"input\",\n                class: \"textinput\",\n                attribute: {\n                    type: \"date\"\n                }\n            });\n            if (date) {\n                dateInput.setAttribute(\n                    \"value\",\n                    (date.getFullYear() + \"-\" +\n                    make2Decimals(date.getMonth()) + \"-\" +\n                    make2Decimals(date.getDate()))\n                    );\n                }\n                dateInput.addEventListener(\"input\", submitAndRerender);\n                return dateInput\n            }\n            \n        function createDeleteKey() {\n            const deleteKey = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"div\",\n                class: \"delete\",\n                text: \"✖\"\n            });\n            deleteKey.addEventListener(\"click\", submitAndRerender);\n            return deleteKey;\n        };\n        \n        function createNotesBox(notes) { // send obj.notes\n            const notesBox = _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.returnElement({\n                type: \"textarea\",\n                class: \"textarea hidden\",\n                attribute: {\n                    rows: \"6\",\n                    spellcheck: \"false\"\n                }\n            })\n            if (notes) {\n                notesBox.textContent = notes;\n            }\n            notesBox.addEventListener(\"focusout\", e => submit(e.target));\n            // or modify submit function to check if event or element\n            return notesBox;\n        }\n        \n        // event listener functions\n        \n        function _toggleNotesAndSubmit(element) {\n            const notes = element.parentElement.parentElement.lastChild;\n    \n            if (notes.classList.contains(\"hidden\")) { // click to reveal\n                notes.classList.remove(\"hidden\");\n            } else { // click to hide and (submit contents)\n                submit(notes);\n                notes.classList.add(\"hidden\")\n            }\n        }\n        \n        function _toggleInput(element) {\n            element.classList.add(\"hidden\");\n            const input = element.nextElementSibling;\n            input.classList.remove(\"hidden\");\n            input.focus();\n            input.select();\n        }\n    \n        // draw list\n    \n        if (projIndex !== null) { // list of todos\n            array.forEach((obj, i) => {\n                const outerContainer = createContainer(i)\n                outerContainer.className = \"box\"; // overwrite class\n                const innerContainer = createContainer(i); // flex container\n                _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.appendChildren(\n                    innerContainer,\n                    createCheckbox(obj.complete),\n                    createName(obj),\n                    createNameInput(obj.name),\n                    createSelectBox(),\n                    createImportantIcon(obj.important),\n                    createDateInput(obj.dueDate),\n                    createDeleteKey(),\n                );\n                _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.appendChildren(\n                    outerContainer,\n                    innerContainer,\n                    createNotesBox(obj.notes)\n                )\n                panel.appendChild(outerContainer);\n            });\n        } else { // list of projects\n            array.forEach((obj, i) => {\n                const container = createContainer(i);\n                container.classList.add(\"box\", \"project\");\n                _domtools_js__WEBPACK_IMPORTED_MODULE_1__.default.appendChildren(\n                    container,\n                    createColorPicker(obj.color),\n                    createName(obj),\n                    createNameInput(obj.name),\n                    createDeleteKey()\n                )\n                panel.appendChild(container);\n            });\n        }\n    }\n\n    // returned publicly to allow render on page load\n    \n    return {\n        renderCurrent,\n        setCurrent\n    }\n\n})();\n\n\n// SUBMIT FUNCTION\n\n// - queries attached element\n// - submits relevant information to relevant todo module function\n// - updates local storage\n// requires todo module\n\n\nfunction submit(element) {\n    const parent = element.parentElement;\n\n    const projIndex = (parent.dataset.projectindex === \"null\") ?\n        \"null\" : Number(parent.dataset.projectindex);\n    let todoIndex = undefined;\n    if (parent.hasAttribute(\"data-todoindex\")) {\n        todoIndex = (parent.dataset.todoindex === \"null\") ?\n            \"null\" : Number(parent.dataset.todoindex);\n    }\n\n    if (element.getAttribute(\"type\") === \"color\") { // color input\n        _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.editItem(\"color\", element.value, projIndex + 1);\n    } else if (element.getAttribute(\"type\") === \"checkbox\") { // checkbox\n        if (element.checked) {\n            _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.editItem(\"complete\", true, projIndex, todoIndex);\n        } else {\n            _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.editItem(\"complete\", false, projIndex, todoIndex);\n        }\n    } else if (element.getAttribute(\"type\") === \"text\") { // text input\n\n            // new project container:\n            //  - project index: undefined\n            //  - no todo index\n            // new todo container:\n            //  - project index: always something, even 0\n            //  - no todo index\n            // edited project container:\n            //  - project-index: index of project - 1\n            //  - todo index of \"null\"\n            // edited todo container:\n            //  - project index: index\n            //  - todo index: index\n\n        if (todoIndex === undefined) { // no todo index attribute, is a new box\n            if (projIndex === \"null\") { // no project index, is a new project;\n                render.setCurrent(_todo_js__WEBPACK_IMPORTED_MODULE_0__.default.addItem(element.value));\n            } else { // has numeric project index, is a new todo\n                _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.addItem(element.value, projIndex);\n            }\n        } else { // has own todo index attribute, is an edited box\n            if (todoIndex === \"null\") { // is an edited project\n                _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.editItem(\"name\", element.value, (projIndex + 1));\n            } else { // has valid todo index, is an edited todo\n                _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.editItem(\"name\", element.value, projIndex, todoIndex);\n            }\n        }\n    } else if (element.tagName === \"SELECT\") { // select box\n        _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.moveItem(projIndex, element.value, todoIndex);\n    } else if (element.textContent === \"!\") {\n        const newImportance = (element.dataset.importance !== \"true\");\n        _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.editItem(\"important\", newImportance, projIndex, todoIndex);\n    } else if (element.getAttribute(\"type\") === \"date\") { // date box\n        _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.editItem(\"dueDate\", new Date(element.value), projIndex, todoIndex);\n    } else if (element.textContent === \"✖\") { // delete button\n        console.log(todoIndex);\n        console.log(projIndex);\n        if (todoIndex === \"null\") {\n            if (confirm(\"Delete todo list?\")) {\n                _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.deleteItem(projIndex + 1);\n                render.setCurrent()\n            }\n        } else {\n            if (confirm(\"Delete todo item?\")) {\n                _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.deleteItem(projIndex, todoIndex);\n            }\n        }\n    }\n    else if (element.tagName === \"TEXTAREA\") { // notes\n        const notesText = (element.value) ? element.value : undefined;\n        _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.editItem(\"notes\", notesText, projIndex, todoIndex);\n    }\n\n    // update local storage\n\n    localStorage.setItem('user', JSON.stringify(_todo_js__WEBPACK_IMPORTED_MODULE_0__.default.exportAll()));\n}\n\n// on page load\n\n(function() {\n    const userData = JSON.parse(localStorage.getItem('user'))\n    console.table(userData);\n    if (userData) {\n        _todo_js__WEBPACK_IMPORTED_MODULE_0__.default.importAll(userData);\n    }\n    render.renderCurrent();\n})();\n\n\n//# sourceURL=webpack://todo/./src/index.js?");

/***/ }),

/***/ "./src/todo.js":
/*!*********************!*\
  !*** ./src/todo.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst todo = (function() {\n    let projectArray = [\n        {\n            name: \"-- default --\",\n            color: \"#000000\",\n            get outstanding() {\n                return _getOutstandingTodos.call(this);\n            },\n            get complete() {\n                return _getCompleteStatus.call(this);\n            },\n            get important() {\n                return _getImportantTodos.call(this);\n            },\n            get dueThisWeek() {\n                return _getTodosDue.call(this);\n            },\n            get overdue() {\n                return _getOverdueTodos.call(this);\n            },\n            todos: [\n        //         {\n        //             name: \"Buy the groceries\",\n        //             dueDate: new Date(2021, 6, 14),\n        //             important: true,\n        //             notes: \"Get a bunch of yummy food\",\n        //             complete: false\n        //         },\n        //         {\n        //             name: \"Wash the dog\",\n        //             dueDate: undefined,\n        //             important: false,\n        //             notes: undefined,\n        //             complete: false\n        //         }\n            ]\n        },\n        // {\n\n        //     name: \"Do the cleaning\",\n        //     color: \"#4245f5\",\n        //     get outstanding() {\n        //         return _getOutstandingTodos.call(this);\n        //     },\n        //     get complete() {\n        //         return _getCompleteStatus.call(this);\n        //     },\n        //     get important() {\n        //         return _getImportantTodos.call(this);\n        //     },\n        //     get dueThisWeek() {\n        //         return _getTodosDue.call(this);\n        //     },\n        //     get overdue() {\n        //         return _getOverdueTodos.call(this);\n        //     },\n        //     todos: [\n        //         {\n        //             name: \"Tidy up my room\",\n        //             dueDate: new Date(2021, 3, 21),\n        //             important: true,\n        //             notes: \"Put the socks in the drawers, generally sort it out\",\n        //             complete: false\n        //         },\n        //         {\n        //             name: \"Do the laundry\",\n        //             dueDate: new Date(2021, 7, 5),\n        //             important: false,\n        //             notes: \"Put everything in those little baggies\",\n        //             complete: false\n        //         },\n        //         {\n        //             name: \"Wash the dishes\",\n        //             dueDate: new Date(2021, 3, 9),\n        //             important: true,\n        //             notes: \"Put the socks in the drawers, generally sort it out\",\n        //             complete: true\n        //         },\n        //         {\n        //             name: \"Vacuum clean\",\n        //             dueDate: undefined,\n        //             important: true,\n        //             notes: undefined,\n        //             complete: false\n        //         }\n        //     ]\n        // },\n        // {\n\n        //     name: \"Learn French\",\n        //     color: \"#f57e42\",\n        //     get outstanding() {\n        //         return _getOutstandingTodos.call(this);\n        //     },\n        //     get complete() {\n        //         return _getCompleteStatus.call(this);\n        //     },\n        //     get important() {\n        //         return _getImportantTodos.call(this);\n        //     },\n        //     get dueThisWeek() {\n        //         return _getTodosDue.call(this);\n        //     },\n        //     get overdue() {\n        //         return _getOverdueTodos.call(this);\n        //     },\n        //     todos: [\n        //         {\n        //             name: \"Learn verbs\",\n        //             dueDate: new Date(2021, 7, 5),\n        //             important: true,\n        //             notes: \"Put the socks in the drawers, generally sort it out\",\n        //             complete: false\n        //         },\n        //         {\n        //             name: \"Learn nouns\",\n        //             dueDate: new Date(2021, 7, 5),\n        //             important: false,\n        //             notes: \"Put everything in those little baggies\",\n        //             complete: false\n        //         },\n        //         {\n        //             name: \"Learn adjectives\",\n        //             dueDate: new Date(2021, 3, 9),\n        //             important: true,\n        //             notes: \"Put the socks in the drawers, generally sort it out\",\n        //             complete: true\n        //         },\n        //         {\n        //             name: \"Learn talk gud\",\n        //             dueDate: undefined,\n        //             important: true,\n        //             notes: undefined,\n        //             complete: false\n        //         }\n        //     ]\n        // }\n    ];\n\n    // methods\n\n    function _getOutstandingTodos() {\n        return this.todos.filter(todo => todo.complete === false);\n    }\n\n    function _getCompleteStatus() {\n        let complete;\n        if (this.todos.length === 0) {\n            complete = false;\n        } else {\n            complete = true;\n        }\n        this.todos.forEach(todo => {\n            if (todo.complete === false) {\n                complete = false;\n            }\n        });\n        return complete;\n    };\n\n    function _getImportantTodos() {\n        return this.todos.filter(todo => todo.important === true);\n    };\n\n    function _getTodosDue() {\n        const today = new Date();\n        const weekFromNow = new Date(\n            today.getFullYear(),\n            today.getMonth(),\n            today.getDate() + 7\n        );\n        return this.todos.filter(todo => {\n            return (todo.dueDate > today) && (todo.dueDate < weekFromNow);\n        })\n    };\n\n    function _getOverdueTodos() {\n        const today = new Date();\n        return this.todos.filter(todo => todo.dueDate < today);\n    };\n\n    // public functions\n\n    function returnItem(projIndex, todoIndex = null) {\n        if (todoIndex !== null) {\n            console.log(projectArray[projIndex].todos[todoIndex]);\n            return projectArray[projIndex].todos[todoIndex];\n        } else {\n            return projectArray[projIndex];\n        }\n    };\n\n    function returnAll() {\n        return projectArray\n    }\n\n    function exportAll() {\n        const exportArray = projectArray.map(project => {\n            return ({\n                name: project.name,\n                color: project.color,\n                todos: project.todos\n            })\n        })\n        console.log(exportArray);\n        return exportArray;\n    }\n\n    function importAll(userArray) {\n        console.log(userArray);\n        const importArray = userArray.map(project => {\n            return ({\n                name: project.name,\n                color: project.color,\n                get outstanding() {\n                    return _getOutstandingTodos.call(this);\n                },\n                get complete() {\n                    return _getCompleteStatus.call(this);\n                },\n                get important() {\n                    return _getImportantTodos.call(this);\n                },\n                get dueThisWeek() {\n                    return _getTodosDue.call(this);\n                },\n                get overdue() {\n                    return _getOverdueTodos.call(this);\n                },\n                todos: project.todos\n            })\n        });\n        console.log(importArray);\n        projectArray = importArray;\n    }\n\n    function setAll(array) {\n        array.forEach((project, i) => {\n            const thisProj = projectArray[i];\n            thisProj.name = project.name;\n            thisProj.color = project.color;\n            thisProj.todos = project.todos;\n        });\n    }\n\n    function returnProjNames() {\n        return projectArray.map(project => project.name);\n    }\n\n    function addItem(name, projIndex = null) {\n        if (projIndex !== null) {\n            const newTodo = {\n                name,\n                dueDate: undefined,\n                important: false,\n                notes: undefined,\n                complete: false\n            };\n            returnItem(projIndex).todos.push(newTodo);\n        } else {\n            const newProject = {\n                name,\n                color: \"#000000\",\n                get outstanding() {\n                    return _getOutstandingTodos.call(this);\n                },\n                get complete() {\n                    return _getCompleteStatus.call(this);\n                },\n                get important() {\n                    return _getImportantTodos.call(this);\n                },\n                get dueThisWeek() {\n                    return _getTodosDue.call(this);\n                },\n                get overdue() {\n                    return _getOverdueTodos.call(this);\n                },\n                todos: []\n            }\n            projectArray.push(newProject);\n            return (projectArray.length - 1); // index of new project\n        };\n    }\n\n    function editItem(attr, value, projIndex, todoIndex = null) {\n        if (todoIndex !== null) {\n            const thisTodo = returnItem(projIndex, todoIndex);\n            console.log(thisTodo);\n            thisTodo[attr] = value;\n        } else {\n            const thisProj = returnItem(projIndex);\n            thisProj[attr] = value;\n        }\n    }\n    \n    function moveItem(oldProjIndex, newProjIndex, oldTodoIndex = null) {\n        if (oldTodoIndex !== null) {\n            const oldProj = returnItem(oldProjIndex);\n            let movedTodo;\n            [movedTodo] = oldProj.todos.splice(oldTodoIndex, 1);\n            const newProj = returnItem(newProjIndex);\n            newProj.todos.push(movedTodo);\n        } // else { some code down the line to reorder projects }\n    }\n\n    function deleteItem(projIndex, todoIndex = null) {\n        if (todoIndex !== null) {\n            returnItem(projIndex).todos.splice(todoIndex, 1);\n        } else {\n            projectArray.splice(projIndex, 1);\n        }\n    };\n\n    // return functions\n\n    return {\n        returnItem,\n        returnAll,\n        exportAll,\n        importAll,\n        returnProjNames,\n        addItem,\n        editItem,\n        moveItem,\n        deleteItem,\n    }\n\n})();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (todo);\n\n//# sourceURL=webpack://todo/./src/todo.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;